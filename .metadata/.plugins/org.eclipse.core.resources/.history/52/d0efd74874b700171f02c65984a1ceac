(function() {
	/**
	 * Variables
	 */
	var user_id = '1111';
	var lng = -122.08;
	var lat = 37.38;
	
	function $(tag, options) {
		if (!options) {
			return document.getElementById(tag);
		}

		var element = document.createElement(tag);

		for ( var option in options) {
			if (options.hasOwnProperty(option)) {
				element[option] = options[option];
			}
		}

		return element;
	}

	function showLoadingMessage(msg) {
		var itemList = $('item-list');
		itemList.innerHTML = '<p class="notice"><i class="fa fa-spinner fa-spin"></i> '+ msg + '</p>';
	}

	function showWarningMessage(msg) {
	    var itemList = $('item-list');
	    itemList.innerHTML = '<p class="notice"><i class="fa fa-exclamation-triangle"></i> ' + msg + '</p>';
	}

	function showErrorMessage(msg) {
		var itemList = $('item-list');
		itemList.innerHTML = '<p class="notice"><i class="fa fa-exclamation-circle"></i> ' + msg + '</p>';
	}
	
	function activeBtn(btnId) {
		var btns = document.getElementsByClassName('main-nav-btn');

		for (var i = 0; i < btns.length; i++) {
			btns[i].className =btns[i].className.replace(/\bactive\b/, '');
		}

		// active the one that has id = btnId
		var btn = $(btnId);
		btn.className += ' active';
	}
	
	// Initialize the HTTP request.
	var xhr = new XMLHttpRequest();
	xhr.open('get', 'send-ajax-data.php');

	// Track the state changes of the request.
	xhr.onreadystatechange = function () {
	    var DONE = 4; // readyState 4 means the request is done.
	    var OK = 200; // status 200 is a successful return.

	    if (xhr.readyState === DONE) {
	        if (xhr.status === OK) {
	            console.log(xhr.responseText); // 'This is the returned text.'
	        } else {
	            console.log('Error: ' + xhr.status); // An error occurred during the request.
	        }
	    }
	};

	// Send the request to send-ajax-data.php
	xhr.send(null);

	/**
	 * AJAX helper
	 * 
	 * @param method - GET|POST|PUT|DELETE
	 * @param url - API end point
	 * @param callback - This the successful callback
	 * @param errorHandler - This is the failed callback
	 */
	function ajax(method, url, data, callback, errorHandler) {
	  var xhr = new XMLHttpRequest();

	  xhr.open(method, url, true);

	  xhr.onload = function () {
	    switch (xhr.status) {
	      case 200:
	        callback(xhr.responseText);
	        break;
	      case 403:
	        onSessionInvalid();
	        break;
	      case 401:
	        errorHandler();
	        break;
	    }
	  };

	  xhr.onerror = function () {
	    console.error("The request couldn't be completed.");
	    errorHandler();
	  };

	  if (data === null) {
	    xhr.send();
	  } else {
	    xhr.setRequestHeader("Content-Type", "application/json;charset=utf-8");
	    xhr.send(data);
	  }
	}


})();
